Using ``add_integer``
---------------------

Importing function from module:
	>>> add_integer = __import__("0-add_integer").add_integer

Checking for module docstring:
	>>> m = __import__("0-add_integer").__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__("0-add_integer").add_integer.__doc__
	>>> len(f) > 1
	True

Checking for regular addition:
	>>> add_integer(5, 3)
	8

Addition between negative and positive number:
	>>> add_integer(-5, 3)
	-2

Addition between positive and negative number:
	>>> add_integer(5, -3)
	2

Addition over multiple values:
	>>> [add_integer(i, i ** 2) for i in range(10)]
	[0, 2, 6, 12, 20, 30, 42, 56, 72, 90]

Addition between float and int:
	>>> add_integer(5.1, -3)
	2

Addition between float and float:
	>>> add_integer(5.1, 3.1)
	8

Checking for passed NaN:
	>>> add_integer(5, float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

Checking for inf:
	>>> add_integer(5, float('inf'))
	Traceback (most recent call last):
	... 	
	OverflowError: cannot convert float infinity to integer

Checking for very long int:
	>>> add_integer(59999999999999999999999999999999999, 1)
	60000000000000000000000000000000000

Addition between non-number and number:
	>>> add_integer([5], 3)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	
Addition between number and non-number:
	>>> add_integer(5, [3])
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Addition between non-number and non-number:
	>>> add_integer("5", [3])
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Addition between bool and number:
	>>> add_integer(False, 3)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Addition between number and bool:
	>>> add_integer(5, False)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Addition with no args:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Addition with 1 arg:
	>>> add_integer(5)
	103

Addition with more than 2 args:
	>>> add_integer(5, 4, 5)
	Traceback (most recent call last):
	...
	TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

